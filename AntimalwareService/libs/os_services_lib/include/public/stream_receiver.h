#pragma once
#include <memory>
#include "IObjectDeserializer.h"
#include "IObjectSerializer.h"
#include "IOStream.h"

class StreamReceiver : public IObjectDeserializer, public IObjectSerializer
{
public:
    StreamReceiver(const std::shared_ptr<IOStream>& stream);
    virtual bool ReadUInt8(uint8_t& data) override;
    virtual bool ReadUInt16(uint16_t& data) override;
    virtual bool ReadUInt32(uint32_t& data) override;
    virtual bool ReadUInt64(uint64_t& data) override;
    virtual bool ReadInt8(uint8_t& data) override;
    virtual bool ReadInt16(int16_t& data) override;
    virtual bool ReadInt32(int32_t& data) override;
    virtual bool ReadInt64(int64_t& data) override;
    virtual bool ReadFloat32(float& data) override;
    virtual bool ReadFloat64(double& data) override;
    virtual bool ReadChar(char& data) override;
    virtual bool ReadBool(bool& data) override;
    virtual bool ReadString(std::string& data) override;
    virtual bool ReadBlob(std::vector<uint8_t>& data) override;
    virtual bool ReadGUID(GUID& guid) override;
    virtual bool ReadObjectType(ObjectType& type) override;
    virtual bool WriteUInt8(uint8_t data) override;
    virtual bool WriteUInt16(uint16_t data) override;
    virtual bool WriteUInt32(uint32_t data) override;
    virtual bool WriteUInt64(uint64_t data) override;
    virtual bool WriteInt8(uint8_t data);
    virtual bool WriteInt16(int16_t data);
    virtual bool WriteInt32(int32_t data);
    virtual bool WriteInt64(int64_t data);
    virtual bool WriteFloat32(float data) override;
    virtual bool WriteFloat64(double data) override;
    virtual bool WriteChar(char data) override;
    virtual bool WriteBool(bool data) override;
    virtual bool WriteString(const std::string& data) override;
    virtual bool WriteBlob(const std::vector<uint8_t>& data) override;
    virtual bool WriteGUID(const GUID& guid) override;
    virtual bool WriteObjectType(ObjectType type) override;

private:
    std::shared_ptr<IOStream> m_stream;
    ObjectType StringToObjectType(const std::string& str);
    std::string ObjectTypeToString(ObjectType type);
};
