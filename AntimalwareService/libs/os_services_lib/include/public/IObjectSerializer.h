#pragma once
#include <cstdint>
#include <string>
#include <vector>
#include <objbase.h>
#include "../../../av_bases_lib/include/public/Record.h"

struct IObjectSerializer
{
    virtual bool WriteUInt8(uint8_t data) = 0;
    virtual bool WriteUInt16(uint16_t data) = 0;
    virtual bool WriteUInt32(uint32_t data) = 0;
    virtual bool WriteUInt64(uint64_t data) = 0;
    virtual bool WriteInt8(uint8_t data) = 0;
    virtual bool WriteInt16(int16_t data) = 0;
    virtual bool WriteInt32(int32_t data) = 0;
    virtual bool WriteInt64(int64_t data) = 0;
    virtual bool WriteFloat32(float data) = 0;
    virtual bool WriteFloat64(double data) = 0;
    virtual bool WriteChar(char data) = 0;
    virtual bool WriteBool(bool data) = 0;
    virtual bool WriteString(const std::string& data) = 0;
    virtual bool WriteBlob(const std::vector<uint8_t>& data) = 0;
    virtual bool WriteGUID(const GUID& guid) = 0;
    virtual bool WriteObjectType(ObjectType type) = 0;
    virtual ~IObjectSerializer() = default;
};