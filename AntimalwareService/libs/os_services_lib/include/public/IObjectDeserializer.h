#pragma once

#include <cstdint>
#include <string>
#include <vector>
#include <objbase.h>
#include "../../../av_bases_lib/include/public/Record.h"

struct IObjectDeserializer
{
    virtual bool ReadUInt8(uint8_t& data) = 0;
    virtual bool ReadUInt16(uint16_t& data) = 0;
    virtual bool ReadUInt32(uint32_t& data) = 0;
    virtual bool ReadUInt64(uint64_t& data) = 0;
    virtual bool ReadInt8(uint8_t& data) = 0;
    virtual bool ReadInt16(int16_t& data) = 0;
    virtual bool ReadInt32(int32_t& data) = 0;
    virtual bool ReadInt64(int64_t& data) = 0;
    virtual bool ReadFloat32(float& data) = 0;
    virtual bool ReadFloat64(double& data) = 0;
    virtual bool ReadChar(char& data) = 0;
    virtual bool ReadBool(bool& data) = 0;
    virtual bool ReadString(std::string& data) = 0;
    virtual bool ReadBlob(std::vector<uint8_t>& data) = 0;
    virtual bool ReadGUID(GUID& guid) = 0;
    virtual bool ReadObjectType(ObjectType& type) = 0;
    virtual ~IObjectDeserializer() = default;
};
